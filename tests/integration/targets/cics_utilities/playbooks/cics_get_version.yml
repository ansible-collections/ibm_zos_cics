# (c) Copyright IBM Corp. 2023
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)
---
- name: CICS Version Integration Test
  hosts: "all"
  gather_facts: false
  vars:
    username: "{{ cmci_user }}"
    uniquename: "{{ uniquename }}"

  tasks:
    ############################################################################
    # Get CICS version for dev version 
    ############################################################################
    - name: Retrieve CICS version information
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: 'ANTZ.CICS.TS.DEV.INTEGRAT'
      register: result

    - name: Assert 1
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.cics_version == '7.5.0'
          - result.rc == 0
          - "'exception' not in result"

    ############################################################################
    # Get CICS version for 6.1
    ############################################################################
    - name: Retrieve CICS version information
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: 'CTS610.CICS740'
      register: result
      
    - name: Assert 2
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.cics_version == '7.4.0'
          - result.rc == 0
          - "'exception' not in result"

    ############################################################################
    # Get CICS version for 5.6
    ############################################################################
    - name: Retrieve CICS version information
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: 'CTS560.CICS730'
      register: result
      
    - name: Assert 3
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.cics_version == '7.3.0'
          - result.rc == 0
          - "'exception' not in result"

    ############################################################################
    # Get CICS version for 5.4
    ############################################################################
    - name: Retrieve CICS version information
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: 'CTS540.CICS710'
      register: result
      
    - name: Assert 4
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.cics_version == '7.1.0'
          - result.rc == 0
          - "'exception' not in result"
        
    ############################################################################
    # Fail to get CICS version from incorrect HLQ
    ############################################################################
    - name: Fail to get CICS version information from incorrect HLQ
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: 'ANZ.CIS.TS.EV.IEGRAT'
      register: result
      failed_when: false

    - name: Assert 5
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.rc != 0
          - "'exception' in result"

    ############################################################################
    # Create a empty dataset and try to read non-existent status
    ############################################################################
    - name: Create empty PDS dataset
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        batch:
          - name: "{{ username }}.{{ uniquename }}.SDFHSAMP"
            type: PDS
          - name: "{{ username }}.{{ uniquename }}.SDFHSAMP(DFH0SINX)"
            type: MEMBER
      register: create_result
  
    - name: Fail to get CICS version information from empty dataset
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: "{{ username }}.{{ uniquename }}"
      register: result
      failed_when: false

    - name: Assert 6
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.rc != 0
          - "'exception' in result"

    ############################################################################
    # Create some data and read a non numeric STATUS value
    ############################################################################

    - name: Write data to the dataset to test for STATUS field
      environment: "{{ environment_vars }}"
      ansible.builtin.shell:
      args:
        executable: /rocket/bin/bash
        cmd: decho 'STATUS = TEST' "{{ username }}.{{ uniquename }}.SDFHSAMP(DFH0SINX)"

    - name: Get CICS version from new dataset
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: "{{ username }}.{{ uniquename }}"
      register: result
      failed_when: false

    - name: Assert 7
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.cics_version == 'TEST'
          - result.rc == 0
          - "'exception' not in result"

    ############################################################################
    # Create and read from dataset where STATUS is EOF
    ############################################################################
        
    - name: Write data to the dataset to test for no data after STATUS
      environment: "{{ environment_vars }}"
      ansible.builtin.shell:
      args:
        executable: /rocket/bin/bash
        cmd: decho 'STATUS =' "{{ username }}.{{ uniquename }}.SDFHSAMP(DFH0SINX)"
      
    - name: Attempt to read data from STATUS which is EOF
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: "{{ username }}.{{ uniquename }}"
      register: result
      failed_when: false

    - name: Assert 8
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.rc != 0
          - "'exception' in result"

    ############################################################################
    # Cleanup dataset
    ############################################################################

    - name: Delete member
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ username }}.{{ uniquename }}.SDFHSAMP(DFH0SINX)"
        state: absent
        type: MEMBER
      register: delete_member_result

    - name: Delete dataset
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ username }}.{{ uniquename }}.SDFHSAMP"
        state: absent
      register: delete_result


    ############################################################################
    # Create and read from a SEQ dataset
    ############################################################################
    - name: Create empty SEQ dataset
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        batch:
          - name: "{{ username }}.{{ uniquename }}.SDFHSAMP"
            type: SEQ
          - name: "{{ username }}.{{ uniquename }}.SDFHSAMP(DFH0SINX)"
            type: MEMBER
      register: create_result

    - name: Write data to SEQ dataset
      environment: "{{ environment_vars }}"
      ansible.builtin.shell:
      args:
        executable: /rocket/bin/bash
        cmd: decho 'STATUS = 1.0.0' "{{ username }}.{{ uniquename }}.SDFHSAMP(DFH0SINX)"

    - name: Read version from SEQ dataset
      environment: "{{ environment_vars }}"
      cics_version:
        CICS_HLQ: "{{ username }}.{{ uniquename }}"
      register: result
      failed_when: false

    - name: Assert 9
      ansible.builtin.assert:
        that:
          - result is not changed
          - result.cics_version == '1.0.0'
          - result.rc == 0
          - "'exception' not in result"

    - name: Delete SEQ dataset
      environment: "{{ environment_vars }}"
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ username }}.{{ uniquename }}.SDFHSAMP"
        state: absent
      register: delete_result